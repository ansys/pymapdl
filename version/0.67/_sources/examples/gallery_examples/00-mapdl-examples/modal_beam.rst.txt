
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/gallery_examples/00-mapdl-examples/modal_beam.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_examples_00-mapdl-examples_modal_beam.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_00-mapdl-examples_modal_beam.py:


.. _ref_modal_beam:

=================================
MAPDL modal beam analysis example
=================================

This example demonstrates how to perform a simple modal analysis
and animate its results.


Objective
~~~~~~~~~
This example models a simple 3D elastic beam made of BEAM188 elements.
These beams elements are made of a linear elastic material similar to steel,
and have a rectangular section.


Procedure
~~~~~~~~~

* Launch MAPDL instance
* Material properties
* Geometry
* Finite element model
* Boundary conditions
* Solving the model
* Post-processing
* Stop MAPDL

.. GENERATED FROM PYTHON SOURCE LINES 34-38

Launch MAPDL instance
=====================

Launch MAPDL with interactive plotting

.. GENERATED FROM PYTHON SOURCE LINES 38-46

.. code-block:: default

    from ansys.mapdl.core import launch_mapdl

    nmodes = 10
    # start MAPDL
    mapdl = launch_mapdl()
    print(mapdl)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Product:             Ansys Mechanical Enterprise
    MAPDL Version:       23.1
    ansys.mapdl Version: 0.67.0





.. GENERATED FROM PYTHON SOURCE LINES 47-51

Define material
===============

Define material

.. GENERATED FROM PYTHON SOURCE LINES 51-56

.. code-block:: default

    mapdl.prep7()
    mapdl.mp("EX", 1, 2.1e11)
    mapdl.mp("PRXY", 1, 0.3)
    mapdl.mp("DENS", 1, 7800)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    MATERIAL          1     DENS =   7800.000



.. GENERATED FROM PYTHON SOURCE LINES 57-61

Create geometry
===============

Create keypoints and line

.. GENERATED FROM PYTHON SOURCE LINES 61-66

.. code-block:: default

    mapdl.k(1)
    mapdl.k(2, 10)
    mapdl.l(1, 2)
    mapdl.lplot()




.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_001.png
   :alt: modal beam
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 67-71

Define finite element model
===========================

Define element type/section type - Rectangular beam section.

.. GENERATED FROM PYTHON SOURCE LINES 71-84

.. code-block:: default

    mapdl.et(1, "BEAM188")
    mapdl.sectype(1, "BEAM", "RECT")
    mapdl.secoffset("CENT")
    mapdl.secdata(2, 1)

    # Mesh the line
    mapdl.type(1)
    mapdl.esize(1)
    mapdl.lesize("ALL")
    mapdl.lmesh("ALL")
    mapdl.eplot()
    mapdl.finish()




.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_002.png
   :alt: modal beam
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    ***** ROUTINE COMPLETED *****  CP =         0.000



.. GENERATED FROM PYTHON SOURCE LINES 85-89

Specify boundary conditions
===========================

Fully fixed (clamped) end.

.. GENERATED FROM PYTHON SOURCE LINES 89-95

.. code-block:: default

    mapdl.solution()  # Entering the solution processor.
    mapdl.nsel("S", "LOC", "X", "0")
    mapdl.d("ALL", "ALL")
    mapdl.allsel()
    mapdl.nplot(plot_bc=True, nnum=True)




.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_003.png
   :alt: modal beam
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 96-100

Solve the model
===============

Setting modal analysis

.. GENERATED FROM PYTHON SOURCE LINES 100-105

.. code-block:: default

    mapdl.antype("MODAL")
    mapdl.modopt("LANB", nmodes, 0, 200)
    mapdl.solve()
    mapdl.finish()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    FINISH SOLUTION PROCESSING


     ***** ROUTINE COMPLETED *****  CP =         0.000



.. GENERATED FROM PYTHON SOURCE LINES 106-110

Postprocess
===========

Enter the post processor (post1)

.. GENERATED FROM PYTHON SOURCE LINES 110-116

.. code-block:: default

    mapdl.post1()
    output = mapdl.set("LIST")
    print(output)

    result = mapdl.result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    *****  INDEX OF DATA SETS ON RESULTS FILE  *****

       SET   TIME/FREQ    LOAD STEP   SUBSTEP  CUMULATIVE
         1  8.3234             1         1         1                  
         2  16.275             1         2         2                  
         3  50.891             1         3         3                  
         4  60.249             1         4         4                  
         5  89.208             1         5         5                  
         6  129.85             1         6         6                  
         7  138.64             1         7         7                  
         8  182.23             1         8         8




.. GENERATED FROM PYTHON SOURCE LINES 117-118

Animate results

.. GENERATED FROM PYTHON SOURCE LINES 118-141

.. code-block:: default


    mode2plot = 2
    normalizeDisplacement = 1 / result.nodal_displacement(mode2plot - 1)[1].max()

    result.plot_nodal_displacement(
        mode2plot,
        show_displacement=True,
        displacement_factor=normalizeDisplacement,
        n_colors=10,
    )

    result.animate_nodal_displacement(
        mode2plot,
        loop=False,
        add_text=False,
        n_frames=100,
        displacement_factor=normalizeDisplacement,
        show_axes=False,
        background="w",
        movie_filename="animation.gif",
        off_screen=True,
    )




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_004.png
          :alt: modal beam
          :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_004.png
          :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_005.gif
          :alt: modal beam
          :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_005.gif
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Rendering animation:   0%|          | 0/100 [00:00<?, ?it/s]    Rendering animation:   1%|          | 1/100 [00:00<00:23,  4.16it/s]    Rendering animation:   3%|▎         | 3/100 [00:00<00:12,  8.06it/s]    Rendering animation:   5%|▌         | 5/100 [00:00<00:10,  9.47it/s]    Rendering animation:   7%|▋         | 7/100 [00:00<00:09, 10.14it/s]    Rendering animation:   9%|▉         | 9/100 [00:00<00:08, 10.63it/s]    Rendering animation:  11%|█         | 11/100 [00:01<00:08, 11.12it/s]    Rendering animation:  13%|█▎        | 13/100 [00:01<00:08, 10.74it/s]    Rendering animation:  15%|█▌        | 15/100 [00:01<00:07, 11.15it/s]    Rendering animation:  17%|█▋        | 17/100 [00:01<00:07, 11.44it/s]    Rendering animation:  19%|█▉        | 19/100 [00:01<00:07, 10.80it/s]    Rendering animation:  21%|██        | 21/100 [00:02<00:07, 10.08it/s]    Rendering animation:  23%|██▎       | 23/100 [00:02<00:07, 10.64it/s]    Rendering animation:  25%|██▌       | 25/100 [00:02<00:07, 10.53it/s]    Rendering animation:  27%|██▋       | 27/100 [00:02<00:06, 10.98it/s]    Rendering animation:  29%|██▉       | 29/100 [00:02<00:06, 11.33it/s]    Rendering animation:  31%|███       | 31/100 [00:02<00:06, 11.10it/s]    Rendering animation:  33%|███▎      | 33/100 [00:03<00:05, 11.23it/s]    Rendering animation:  35%|███▌      | 35/100 [00:03<00:05, 11.52it/s]    Rendering animation:  37%|███▋      | 37/100 [00:03<00:05, 11.48it/s]    Rendering animation:  39%|███▉      | 39/100 [00:03<00:05, 11.11it/s]    Rendering animation:  41%|████      | 41/100 [00:03<00:05, 11.43it/s]    Rendering animation:  43%|████▎     | 43/100 [00:03<00:04, 11.54it/s]    Rendering animation:  45%|████▌     | 45/100 [00:04<00:04, 11.12it/s]    Rendering animation:  47%|████▋     | 47/100 [00:04<00:04, 11.35it/s]    Rendering animation:  49%|████▉     | 49/100 [00:04<00:04, 11.62it/s]    Rendering animation:  51%|█████     | 51/100 [00:04<00:04, 11.29it/s]    Rendering animation:  53%|█████▎    | 53/100 [00:04<00:04, 11.18it/s]    Rendering animation:  55%|█████▌    | 55/100 [00:05<00:03, 11.48it/s]    Rendering animation:  57%|█████▋    | 57/100 [00:05<00:03, 11.63it/s]    Rendering animation:  59%|█████▉    | 59/100 [00:05<00:03, 11.32it/s]    Rendering animation:  61%|██████    | 61/100 [00:05<00:03, 11.20it/s]    Rendering animation:  63%|██████▎   | 63/100 [00:05<00:03, 11.39it/s]    Rendering animation:  65%|██████▌   | 65/100 [00:05<00:03, 11.21it/s]    Rendering animation:  67%|██████▋   | 67/100 [00:06<00:02, 11.19it/s]    Rendering animation:  69%|██████▉   | 69/100 [00:06<00:02, 11.47it/s]    Rendering animation:  71%|███████   | 71/100 [00:06<00:02, 11.68it/s]    Rendering animation:  73%|███████▎  | 73/100 [00:06<00:02, 11.26it/s]    Rendering animation:  75%|███████▌  | 75/100 [00:06<00:02, 11.52it/s]    Rendering animation:  77%|███████▋  | 77/100 [00:06<00:01, 11.67it/s]    Rendering animation:  79%|███████▉  | 79/100 [00:07<00:01, 11.35it/s]    Rendering animation:  81%|████████  | 81/100 [00:07<00:01, 11.42it/s]    Rendering animation:  83%|████████▎ | 83/100 [00:07<00:01, 11.61it/s]    Rendering animation:  85%|████████▌ | 85/100 [00:07<00:01, 11.43it/s]    Rendering animation:  87%|████████▋ | 87/100 [00:07<00:01, 11.34it/s]    Rendering animation:  89%|████████▉ | 89/100 [00:08<00:00, 11.38it/s]    Rendering animation:  91%|█████████ | 91/100 [00:08<00:00, 10.23it/s]    Rendering animation:  93%|█████████▎| 93/100 [00:08<00:00, 10.50it/s]    Rendering animation:  95%|█████████▌| 95/100 [00:08<00:00, 10.86it/s]    Rendering animation:  97%|█████████▋| 97/100 [00:08<00:00, 11.12it/s]    Rendering animation:  99%|█████████▉| 99/100 [00:08<00:00, 10.64it/s]    Rendering animation: 100%|██████████| 100/100 [00:18<00:00,  5.44it/s]

    [(16.153550716504107, 11.153550716504107, 11.153550716504107),
     (5.0, 0.0, 0.0),
     (0.0, 0.0, 1.0)]



.. GENERATED FROM PYTHON SOURCE LINES 142-145

Stop MAPDL
==========


.. GENERATED FROM PYTHON SOURCE LINES 145-147

.. code-block:: default

    mapdl.finish()
    mapdl.exit()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 20.769 seconds)


.. _sphx_glr_download_examples_gallery_examples_00-mapdl-examples_modal_beam.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: modal_beam.py <modal_beam.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: modal_beam.ipynb <modal_beam.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
