
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/gallery_examples/02-geometry/03-volumes.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_gallery_examples_02-geometry_03-volumes.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_02-geometry_03-volumes.py:


.. _ref_basic-geometry-volumes:

Volumes
-------
This example shows how you can use PyMAPDL to create basic geometry
using Pythonic PREP7 volume commands.

.. GENERATED FROM PYTHON SOURCE LINES 10-22

.. code-block:: default


    import numpy as np

    from ansys.mapdl.core import launch_mapdl

    # start MAPDL and enter the pre-processing routine
    mapdl = launch_mapdl()
    mapdl.clear()
    mapdl.prep7()
    print(mapdl)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Product:             Ansys Mechanical Enterprise
    MAPDL Version:       21.2
    ansys.mapdl Version: 0.62.3





.. GENERATED FROM PYTHON SOURCE LINES 23-26

APDL Command: V
~~~~~~~~~~~~~~~
Define a volume through keypoints.

.. GENERATED FROM PYTHON SOURCE LINES 26-41

.. code-block:: default


    # Create a simple cube volume.

    k0 = mapdl.k("", 0, 0, 0)
    k1 = mapdl.k("", 1, 0, 0)
    k2 = mapdl.k("", 1, 1, 0)
    k3 = mapdl.k("", 0, 1, 0)
    k4 = mapdl.k("", 0, 0, 1)
    k5 = mapdl.k("", 1, 0, 1)
    k6 = mapdl.k("", 1, 1, 1)
    k7 = mapdl.k("", 0, 1, 1)
    v0 = mapdl.v(k0, k1, k2, k3, k4, k5, k6, k7)
    mapdl.vplot(show_lines=True)





.. image-sg:: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_001.png
   :alt: 03 volumes
   :srcset: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 42-43

Create a triangular prism

.. GENERATED FROM PYTHON SOURCE LINES 43-58

.. code-block:: default

    mapdl.clear()
    mapdl.prep7()

    k0 = mapdl.k("", 0, 0, 0)
    k1 = mapdl.k("", 1, 0, 0)
    k2 = mapdl.k("", 1, 1, 0)
    k3 = mapdl.k("", 0, 1, 0)
    k4 = mapdl.k("", 0, 0, 1)
    k5 = mapdl.k("", 1, 0, 1)
    k6 = mapdl.k("", 1, 1, 1)
    k7 = mapdl.k("", 0, 1, 1)
    v1 = mapdl.v(k0, k1, k2, k2, k4, k5, k6, k6)
    mapdl.vplot(show_lines=True)





.. image-sg:: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_002.png
   :alt: 03 volumes
   :srcset: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 59-60

Create a triangular prism

.. GENERATED FROM PYTHON SOURCE LINES 60-71

.. code-block:: default

    mapdl.clear()
    mapdl.prep7()

    k0 = mapdl.k("", 0, 0, 0)
    k1 = mapdl.k("", 1, 0, 0)
    k2 = mapdl.k("", 1, 1, 0)
    k3 = mapdl.k("", 0, 0, 1)
    v0 = mapdl.v(k0, k1, k2, k2, k3, k3, k3, k3)
    mapdl.vplot(show_lines=True)





.. image-sg:: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_003.png
   :alt: 03 volumes
   :srcset: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 72-77

APDL Command: VA
~~~~~~~~~~~~~~~~
Generate a volume bounded by existing areas.

Create a simple tetrahedral bounded by 4 areas

.. GENERATED FROM PYTHON SOURCE LINES 77-96

.. code-block:: default


    mapdl.clear()
    mapdl.prep7()
    k0 = mapdl.k("", -1, 0, 0)
    k1 = mapdl.k("", 1, 0, 0)
    k2 = mapdl.k("", 1, 1, 0)
    k3 = mapdl.k("", 1, 0.5, 1)

    # create faces
    a0 = mapdl.a(k0, k1, k2)
    a1 = mapdl.a(k0, k1, k3)
    a2 = mapdl.a(k1, k2, k3)
    a3 = mapdl.a(k0, k2, k3)

    # generate and plot the volume
    vnum = mapdl.va(a0, a1, a2, a3)
    mapdl.aplot(show_lines=True, show_bounds=True)





.. image-sg:: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_004.png
   :alt: 03 volumes
   :srcset: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 97-102

APDL Command: VDRAG
~~~~~~~~~~~~~~~~~~~
Generate volumes by dragging an area pattern along a path.

Create a square with a hole in it and drag it along an arc.

.. GENERATED FROM PYTHON SOURCE LINES 102-118

.. code-block:: default

    mapdl.clear()
    mapdl.prep7()

    # create a square with a hole in it.
    anum0 = mapdl.blc4(0, 0, 1, 1)
    anum1 = mapdl.blc4(0.25, 0.25, 0.5, 0.5)
    aout = mapdl.asba(anum0, anum1)

    k0 = mapdl.k("", 0, 0, 0)
    k1 = mapdl.k("", 1, 0, 1)
    k2 = mapdl.k("", 1, 0, 0)
    l0 = mapdl.larc(k0, k1, k2, 2)
    mapdl.vdrag(aout, nlp1=l0)
    mapdl.vplot(show_lines=True, quality=5)





.. image-sg:: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_005.png
   :alt: 03 volumes
   :srcset: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 119-124

APDL Command: VEXT
~~~~~~~~~~~~~~~~~~
Generate additional volumes by extruding areas.

Create a basic cylinder by extruding a circle.

.. GENERATED FROM PYTHON SOURCE LINES 124-139

.. code-block:: default

    mapdl.clear()
    mapdl.prep7()

    # first, create an area from a circle
    k0 = mapdl.k("", 0, 0, 0)
    k1 = mapdl.k("", 0, 0, 1)
    k2 = mapdl.k("", 0, 0, 0.5)
    carc0 = mapdl.circle(k0, 1, k1)
    a0 = mapdl.al(*carc0)

    # next, extrude it and plot it
    mapdl.vext(a0, dz=4)
    mapdl.vplot(show_lines=True, quality=5)





.. image-sg:: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_006.png
   :alt: 03 volumes
   :srcset: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 140-141

Create a tapered cylinder by using the ``rx`` and ``ry`` parameters.

.. GENERATED FROM PYTHON SOURCE LINES 141-146

.. code-block:: default

    mapdl.vdele("all")
    mapdl.vext(a0, dz=4, rx=0.3, ry=0.3, rz=1)
    mapdl.vplot(show_lines=True, quality=5)





.. image-sg:: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_007.png
   :alt: 03 volumes
   :srcset: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_007.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 147-153

APDL Command: VROTAT
~~~~~~~~~~~~~~~~~~~~
Generate cylindrical volumes by rotating an area pattern about an
axis.

Rotate a circle about the Z axis to create a hoop

.. GENERATED FROM PYTHON SOURCE LINES 153-174

.. code-block:: default

    mapdl.clear()
    mapdl.prep7()

    # first, create an area from a circle
    hoop_radius = 10
    hoop_thickness = 0.5
    k0 = mapdl.k("", hoop_radius, 0, 0)
    k1 = mapdl.k("", hoop_radius, 1, 0)
    k2 = mapdl.k("", hoop_radius, 0, hoop_thickness)
    carc0 = mapdl.circle(k0, 1, k1)
    a0 = mapdl.al(*carc0)

    # define a Z-axis
    k_axis0 = mapdl.k("", 0, 0, 0)
    k_axis1 = mapdl.k("", 0, 0, 1)

    # Rotate about the Z-axis.  By default it will rotate all 360 degrees
    mapdl.vrotat(a0, pax1=k_axis0, pax2=k_axis1)
    mapdl.vplot(show_lines=True, quality=5)





.. image-sg:: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_008.png
   :alt: 03 volumes
   :srcset: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_008.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 175-181

APDL Command: VSYMM
~~~~~~~~~~~~~~~~~~~~
Generate volumes from a volume pattern by symmetry reflection.

Create four blocks by reflecting a single block across the YZ and
then XZ planes.

.. GENERATED FROM PYTHON SOURCE LINES 181-191

.. code-block:: default

    mapdl.clear()
    mapdl.prep7()

    vnum = mapdl.blc4(1, 1, 1, 1, depth=1)
    mapdl.vsymm("X", vnum)
    mapdl.vsymm("Y", "ALL")

    mapdl.vplot(show_lines=True, show_bounds=True)





.. image-sg:: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_009.png
   :alt: 03 volumes
   :srcset: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_009.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 192-195

Volume IDs
~~~~~~~~~~
Return an array of the volume numbers.

.. GENERATED FROM PYTHON SOURCE LINES 195-199

.. code-block:: default

    vnum = mapdl.geometry.vnum
    vnum






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    array([1, 2, 3, 4], dtype=int32)



.. GENERATED FROM PYTHON SOURCE LINES 200-203

Volume Geometry
~~~~~~~~~~~~~~~
Volume geometry can be accessed from the ``geometry.areas`` method.

.. GENERATED FROM PYTHON SOURCE LINES 203-207

.. code-block:: default

    volume_mesh = mapdl.geometry.areas(merge=True)
    volume_mesh







.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>
    <table>
    <tr><th>PolyData</th><th>Information</th></tr>
    <tr><td>N Cells</td><td>384</td></tr>
    <tr><td>N Points</td><td>392</td></tr>
    <tr><td>N Strips</td><td>0</td></tr>
    <tr><td>X Bounds</td><td>-2.000e+00, 2.000e+00</td></tr>
    <tr><td>Y Bounds</td><td>-2.000e+00, 2.000e+00</td></tr>
    <tr><td>Z Bounds</td><td>0.000e+00, 1.000e+00</td></tr>
    <tr><td>N Arrays</td><td>1</td></tr>
    </table>

    </td><td>
    <table>
    <tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>
    <tr><td><b>entity_num</b></td><td>Cells</td><td>int32</td><td>1</td><td>0.000e+00</td><td>0.000e+00</td></tr>
    </table>

    </td></tr> </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 208-216

Volume Selection
~~~~~~~~~~~~~~~~
There are two approaches for selecting volumes, the old "legacy"
style and the new style.  The old style is valuable for those who
are comfortable with the existing MAPDL commands, and new style is
useful for selecting volumes in a pythonic manner.

This example generates a series of random volumes and selects them

.. GENERATED FROM PYTHON SOURCE LINES 216-233

.. code-block:: default

    mapdl.clear()
    mapdl.prep7()


    def generate_random_volume():
        start_x, start_y, height, width, depth = np.random.random(5)
        mapdl.blc4(start_x * 10, start_y * 10, height, width, depth)


    # create 20 random volumes
    for _ in range(20):
        generate_random_volume()

    # Print the volume numbers
    print(mapdl.geometry.vnum)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [ 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20]




.. GENERATED FROM PYTHON SOURCE LINES 234-235

Select every other volume with the old style command.

.. GENERATED FROM PYTHON SOURCE LINES 235-239

.. code-block:: default

    mapdl.vsel("S", "VOLU", "", 1, 20, 2)
    print(mapdl.geometry.vnum)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [ 1  3  5  7  9 11 13 15 17 19]




.. GENERATED FROM PYTHON SOURCE LINES 240-244

Select every other volume with the new style command.

Note that the item IDs are 1 based in MAPDL, while Python ranges are
0 based.

.. GENERATED FROM PYTHON SOURCE LINES 244-248

.. code-block:: default

    mapdl.geometry.volume_select(range(1, 21, 2))
    print(mapdl.geometry.vnum)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [ 1  3  5  7  9 11 13 15 17 19]




.. GENERATED FROM PYTHON SOURCE LINES 249-256

Select volumes from a list

Note that you can ``return_selected`` if you want to see what you
have selected.  This is helpful when reselecting from existing
areas.

Note that you could use a numpy array here as well.

.. GENERATED FROM PYTHON SOURCE LINES 256-260

.. code-block:: default

    items = mapdl.geometry.volume_select([1, 5, 10, 20], return_selected=True)
    print(items)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [ 1  5 10 20]




.. GENERATED FROM PYTHON SOURCE LINES 261-267

APDL Command: VPLOT
~~~~~~~~~~~~~~~~~~~
Plot colored volumes while displaying the keypoint numbers.

There are a variety of plotting options available for all the common
plotting methods.

.. GENERATED FROM PYTHON SOURCE LINES 267-279

.. code-block:: default


    mapdl.clear()
    mapdl.prep7()

    # Create basic demo geometry
    mapdl.cyl4(xcenter=0, ycenter=0, rad1=1, theta1=0, rad2=2, depth=1)
    mapdl.vsymm("Y", "ALL")

    # Plot while showing bounds and disabling extra line plotting.
    mapdl.vplot(show_bounds=True, show_lines=False, quality=5)





.. image-sg:: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_010.png
   :alt: 03 volumes
   :srcset: /examples/gallery_examples/02-geometry/images/sphx_glr_03-volumes_010.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 280-281

stop mapdl

.. GENERATED FROM PYTHON SOURCE LINES 281-282

.. code-block:: default

    mapdl.exit()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  38.089 seconds)


.. _sphx_glr_download_examples_gallery_examples_02-geometry_03-volumes.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 03-volumes.py <03-volumes.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 03-volumes.ipynb <03-volumes.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
