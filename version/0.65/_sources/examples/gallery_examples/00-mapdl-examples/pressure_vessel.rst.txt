
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/gallery_examples/00-mapdl-examples/pressure_vessel.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_examples_00-mapdl-examples_pressure_vessel.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_00-mapdl-examples_pressure_vessel.py:


.. _pressure_vessel_example:

Pressure Vessel
---------------

This example demonstrates how to create a basic pressure vessel and
apply a pressure to it.

Also shown here:
- Various ways of accessing stress results from MAPDL.
- Comparison between PRNSOL, VGET (efficient wrapping), and the legacy reader.
- Notes regarding FULL vs. POWER graphics when using PRNSOL.

.. GENERATED FROM PYTHON SOURCE LINES 16-30

.. code-block:: default

    import numpy as np

    from ansys.mapdl.core import launch_mapdl

    # start mapdl, enter the preprocessor, and set the units
    mapdl = launch_mapdl()

    mapdl.clear()
    mapdl.prep7()

    # US Customary system using inches (in, lbf*s2/in, s, Â°F).
    mapdl.units("BIN")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    U.S. CUSTOMARY INCH UNITS SPECIFIED FOR INTERNAL    
      LENGTH      = INCHES (IN)
      MASS        = LBF-S**2/IN 
      TIME        = SECONDS (SEC)  
      TEMPERATURE = FAHRENHEIT
      TOFFSET     = 460.0
      FORCE       = LBF
      HEAT        = IN-LBF
      PRESSURE    = PSI (LBF/IN**2)
      ENERGY      = IN-LBF
      POWER       = IN-LBF/SEC

     INPUT  UNITS ARE ALSO SET TO BIN



.. GENERATED FROM PYTHON SOURCE LINES 31-32

Set the materials and element type

.. GENERATED FROM PYTHON SOURCE LINES 32-40

.. code-block:: default


    mapdl.et(1, "SOLID285")
    mapdl.mp("EX", 1, 10e6)
    mapdl.mp("PRXY", 1, 0.3)
    mapdl.mp("DENS", 1, 0.1)
    print(mapdl.mplist())






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    MATERIAL NUMBER        1

          TEMP        EX  
                   0.1000000E+08

          TEMP        DENS
                   0.1000000    

          TEMP        PRXY
                   0.3000000




.. GENERATED FROM PYTHON SOURCE LINES 41-42

Create the Geometry

.. GENERATED FROM PYTHON SOURCE LINES 42-59

.. code-block:: default


    # area generation
    height = 10
    inner_width = 2.5
    outer_width = 3.5
    mapdl.rectng(inner_width, outer_width, 0, height)
    mapdl.cyl4(0, height, inner_width, 0, outer_width, 90)

    # combine areas
    a_comb = mapdl.aadd(1, 2)
    mapdl.aplot(color="grey", background="w", show_area_numbering=True)

    # Generate a cylindrical volume by rotating an area pattern about an axis
    mapdl.vrotat(a_comb, pax1=6, arc=90)
    mapdl.vplot(color="grey", background="w", show_area_numbering=True, cpos="zy")





.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_pressure_vessel_001.png
          :alt: pressure vessel
          :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_pressure_vessel_001.png
          :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_pressure_vessel_002.png
          :alt: pressure vessel
          :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_pressure_vessel_002.png
          :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 60-61

Create the mesh

.. GENERATED FROM PYTHON SOURCE LINES 61-69

.. code-block:: default

    mapdl.smrtsize(1)
    mapdl.esize(0.25, 0)
    mapdl.mshape(1, "3D")
    mapdl.mshkey(0)
    mapdl.vmesh("ALL")
    mapdl.eplot(color="grey", background="w")





.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_pressure_vessel_003.png
   :alt: pressure vessel
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_pressure_vessel_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 70-71

Solve

.. GENERATED FROM PYTHON SOURCE LINES 71-91

.. code-block:: default


    # boundary condition selection
    mapdl.geometry.area_select([3, 5, 7])
    mapdl.da("ALL", "SYMM")
    mapdl.allsel()

    # apply pressure
    mapdl.geometry.area_select([1, 6])
    mapdl.sfa("ALL", 1, "PRES", 1000)
    mapdl.allsel()

    # solver
    mapdl.run("/SOL")
    mapdl.antype(0)
    mapdl.outres("ALL", "ALL")
    mapdl.run("/STATUS,SOLU")
    sol_output = mapdl.solve()
    mapdl.finish()






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    FINISH SOLUTION PROCESSING


     ***** ROUTINE COMPLETED *****  CP =         0.000



.. GENERATED FROM PYTHON SOURCE LINES 92-98

Post-Processing
~~~~~~~~~~~~~~~
Enter the MAPDL post-postprocessing routine (/POST1) and obtain the
von-mises stress for the single static solution. Here, we use MAPDL
directly to obtain the results using a wrapper around the VGET
method to efficiently obtain results without outputting to disk.

.. GENERATED FROM PYTHON SOURCE LINES 98-123

.. code-block:: default


    # enter the postprocessing routine
    mapdl.post1()
    mapdl.set(1, 1)

    # results directly from MAPDL's VGET command
    # VGET, __VAR__, NODE, , S, EQV
    nnum = mapdl.mesh.nnum
    von_mises_mapdl = mapdl.post_processing.nodal_eqv_stress()

    # we could print out the solution for each node with:

    print(f"\nNode  Stress (psi)")
    for node_num, stress_value in zip(nnum[:5], von_mises_mapdl[:5]):
        print(f"{node_num:<5d} {stress_value:.3f}")
    print("...")

    # or simply get the maximum stress value and corresponding node
    idx = np.argmax(von_mises_mapdl)
    node_num = nnum[idx]
    stress_value = von_mises_mapdl[idx]
    print(f"\nMaximum Stress")
    print(f"Node  Stress (psi)")
    print(f"{node_num:<5d} {stress_value:.3f}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Node  Stress (psi)
    1     3301.403
    2     1906.958
    3     1387.545
    4     1373.553
    5     867.288
    ...

    Maximum Stress
    Node  Stress (psi)
    1004  3483.042




.. GENERATED FROM PYTHON SOURCE LINES 124-125

Plot the results

.. GENERATED FROM PYTHON SOURCE LINES 125-129

.. code-block:: default


    mapdl.post_processing.plot_nodal_eqv_stress(cpos="zy")





.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_pressure_vessel_004.png
   :alt: pressure vessel
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_pressure_vessel_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 130-133

We could, alternatively, get the exact same results by directly
accessing the result file using the legacy file reader
`ansys-mapdl-reader <https://github.com/pyansys/pymapdl-reader>`_.

.. GENERATED FROM PYTHON SOURCE LINES 133-144

.. code-block:: default


    # access the result
    result = mapdl.result

    # Get the von mises stess and show that this is equivalent to the
    # stress obtained from MAPDL.
    nnum, stress = result.principal_nodal_stress(0)
    von_mises = stress[:, -1]  # von-Mises stress is the right most column
    min_von_mises, max_von_mises = np.min(von_mises), np.max(von_mises)
    print("All close:", np.allclose(von_mises, von_mises_mapdl))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    All close: True




.. GENERATED FROM PYTHON SOURCE LINES 145-150

That these results are equivalent to results from PRNSOL.

.. note::
   Enabling POWER GRAPHICS with ``mapdl.graphics('POWER')`` will
   change the averaging scheme.

.. GENERATED FROM PYTHON SOURCE LINES 150-164

.. code-block:: default


    mapdl.header("OFF", "OFF", "OFF", "OFF", "OFF", "OFF")
    table = mapdl.prnsol("S", "PRIN").splitlines()[1:]
    prnsol_eqv = np.genfromtxt(table)[:, -1]  # eqv is the last column

    # show these are equivalent (RTOL due to rounding within PRNSOL)
    print("All close:", np.allclose(von_mises, prnsol_eqv, rtol=1e-4))

    print(f"LEGACY Reader and MAPDL VGET Min: {min_von_mises}")
    print(f"PRNSOL MAPDL Min:                 {prnsol_eqv.min()}")
    print()
    print(f"LEGACY Reader and MAPDL VGET Min: {max_von_mises}")
    print(f"PRNSOL MAPDL Min:                 {prnsol_eqv.max()}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    All close: True
    LEGACY Reader and MAPDL VGET Min: 691.8562018090861
    PRNSOL MAPDL Min:                 691.8562017

    LEGACY Reader and MAPDL VGET Min: 3483.0418952187224
    PRNSOL MAPDL Min:                 3483.041895




.. GENERATED FROM PYTHON SOURCE LINES 165-168

Stop mapdl
~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 168-169

.. code-block:: default

    mapdl.exit()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  7.605 seconds)


.. _sphx_glr_download_examples_gallery_examples_00-mapdl-examples_pressure_vessel.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: pressure_vessel.py <pressure_vessel.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: pressure_vessel.ipynb <pressure_vessel.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
