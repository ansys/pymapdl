
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/gallery_examples/00-mapdl-examples/mapdl_3d_beam.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_examples_00-mapdl-examples_mapdl_3d_beam.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_00-mapdl-examples_mapdl_3d_beam.py:


.. _ref_3d_beam:

MAPDL 3D Beam Example
---------------------

This is a simple example that loads an archive file containing a beam
and then runs a modal analysis using the simplified ``modal_analysis``
method.

First, start by launching MAPDL as a service.

.. GENERATED FROM PYTHON SOURCE LINES 13-45

.. code-block:: default


    from ansys.mapdl.reader import examples

    from ansys.mapdl.core import launch_mapdl

    mapdl = launch_mapdl()

    # load a beam stored as an example archive file and mesh it
    mapdl.cdread("db", examples.hexarchivefile)
    mapdl.esel("s", "ELEM", vmin=5, vmax=20)
    mapdl.cm("ELEM_COMP", "ELEM")
    mapdl.nsel("s", "NODE", vmin=5, vmax=20)
    mapdl.cm("NODE_COMP", "NODE")

    # boundary conditions
    mapdl.allsel()

    # dummy steel properties
    mapdl.prep7()
    mapdl.mp("EX", 1, 200e9)  # Elastic moduli in Pa (kg/(m*s**2))
    mapdl.mp("DENS", 1, 7800)  # Density in kg/m3
    mapdl.mp("NUXY", 1, 0.3)  # Poissons Ratio
    mapdl.emodif("ALL", "MAT", 1)

    # fix one end of the beam
    mapdl.nsel("S", "LOC", "Z")
    mapdl.d("all", "all")
    mapdl.allsel()

    # plot the boundary conditions
    mapdl.nplot(plot_bc=True)




.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_mapdl_3d_beam_001.png
   :alt: mapdl 3d beam
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_mapdl_3d_beam_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 46-51

.. code-block:: default


    mapdl.mxpand(elcalc="YES")
    mapdl.modal_analysis(nmode=6)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    *****  MAPDL SOLVE    COMMAND  *****

     *** NOTE ***                            CP =       0.000   TIME= 00:00:00
     There is no title defined for this analysis.                            

     *** SELECTION OF ELEMENT TECHNOLOGIES FOR APPLICABLE ELEMENTS ***
                    ---GIVE SUGGESTIONS ONLY---

     ELEMENT TYPE         1 IS SOLID186. KEYOPT(2) IS ALREADY SET AS SUGGESTED.


       *****MAPDL VERIFICATION RUN ONLY*****
         DO NOT USE RESULTS FOR PRODUCTION

                           S O L U T I O N   O P T I O N S

       PROBLEM DIMENSIONALITY. . . . . . . . . . . . .3-D                  
       DEGREES OF FREEDOM. . . . . . UX   UY   UZ  
       ANALYSIS TYPE . . . . . . . . . . . . . . . . .MODAL                
          EXTRACTION METHOD. . . . . . . . . . . . . .BLOCK LANCZOS
       NUMBER OF MODES TO EXTRACT. . . . . . . . . . .     6
       GLOBALLY ASSEMBLED MATRIX . . . . . . . . . . .SYMMETRIC  
       NUMBER OF MODES TO EXPAND . . . . . . . . . . .ALL
       ELEMENT RESULTS CALCULATION . . . . . . . . . .ON 

     *** NOTE ***                            CP =       0.000   TIME= 00:00:00
     The conditions for direct assembly have been met.  No .emat or .erot    
     files will be produced.                                                 

  
  
         D I S T R I B U T E D   D O M A I N   D E C O M P O S E R
  
      ...Number of elements: 40
      ...Number of nodes:    321
      ...Decompose to 0 CPU domains
      ...Element load balance ratio =     0.000


                          L O A D   S T E P   O P T I O N S

       LOAD STEP NUMBER. . . . . . . . . . . . . . . .     1
       THERMAL STRAINS INCLUDED IN THE LOAD VECTOR . .   YES
       PRINT OUTPUT CONTROLS . . . . . . . . . . . . .NO PRINTOUT
       DATABASE OUTPUT CONTROLS. . . . . . . . . . . .ALL DATA WRITTEN



                             ***********  PRECISE MASS SUMMARY  ***********

       TOTAL RIGID BODY MASS MATRIX ABOUT ORIGIN
                   Translational mass               |   Coupled translational/rotational mass
             39000.        0.0000        0.0000     |     0.0000        97500.       -19500.    
             0.0000        39000.        0.0000     |    -97500.        0.0000        19500.    
             0.0000        0.0000        39000.     |     19500.       -19500.        0.0000    
         ------------------------------------------ | ------------------------------------------
                                                    |         Rotational mass (inertia)
                                                    |    0.33800E+06   -9750.0       -48750.    
                                                    |    -9750.0       0.33800E+06   -48750.    
                                                    |    -48750.       -48750.        26000.    

       TOTAL MASS =  39000.    
         The mass principal axes coincide with the global Cartesian axes

       CENTER OF MASS (X,Y,Z)=   0.50000       0.50000        2.5000    

       TOTAL INERTIA ABOUT CENTER OF MASS
             84500.      -0.49072E-11  -0.29301E-10
           -0.49072E-11    84500.      -0.37526E-10
           -0.29301E-10  -0.37526E-10    6500.0    
         The inertia principal axes coincide with the global Cartesian axes


      *** MASS SUMMARY BY ELEMENT TYPE ***

      TYPE      MASS
         1   39000.0    

     Range of element maximum matrix coefficients in global coordinates
     Maximum = 9.116809117E+10 at element 0.                                 
     Minimum = 9.116809117E+10 at element 0.                                 

       *** ELEMENT MATRIX FORMULATION TIMES
         TYPE    NUMBER   ENAME      TOTAL CP  AVE CP

            1        40  SOLID186      0.000   0.000000
     Time at end of element matrix formulation CP = 0.                       

      BLOCK LANCZOS CALCULATION OF UP TO     6 EIGENVECTORS.
      NUMBER OF EQUATIONS              =          900
      MAXIMUM WAVEFRONT                =            0
      MAXIMUM MODES STORED             =            6
      MINIMUM EIGENVALUE               =  0.00000E+00
      MAXIMUM EIGENVALUE               =  0.10000E+31

      Memory available (MB) =    0.0    ,  Memory required (MB) =    0.0    

       *****MAPDL VERIFICATION RUN ONLY*****
         DO NOT USE RESULTS FOR PRODUCTION

     *** FREQUENCIES FROM BLOCK LANCZOS ITERATION ***

      MODE    FREQUENCY (HERTZ)      


        1     32.13951614480    
        2     32.13951614484    
        3     145.4783895431    
        4     173.4557943042    
        5     173.4557943042    
        6     254.8511237205



.. GENERATED FROM PYTHON SOURCE LINES 52-53

View the results using the pyansys result object

.. GENERATED FROM PYTHON SOURCE LINES 53-57

.. code-block:: default

    result = mapdl.result
    print(result)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    PyMAPDL Result
    Units       : User Defined
    Version     : 23.1
    Cyclic      : False
    Result Sets : 6
    Nodes       : 321
    Elements    : 40


    Available Results:
    EMS : Miscellaneous summable items (normally includes face pressures)
    ENF : Nodal forces
    ENS : Nodal stresses
    ENG : Element energies and volume
    EEL : Nodal elastic strains
    ETH : Nodal thermal strains (includes swelling strains)
    EUL : Element euler angles
    EPT : Nodal temperatures
    NSL : Nodal displacements
    RF  : Nodal reaction forces





.. GENERATED FROM PYTHON SOURCE LINES 58-59

Access nodal displacement values

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: default

    nnum, disp = result.nodal_displacement(0)

    # print the nodes 50 - 59
    for i in range(49, 59):
        print(nnum[i], disp[i])






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    50 [-0.00141759  0.0019443   0.00137904]
    51 [-0.00172348  0.002373    0.00148299]
    52 [-0.0020493   0.00282927  0.00157239]
    53 [-0.00239203  0.00330884  0.0016477 ]
    54 [-0.00274878  0.00380771  0.00170983]
    55 [-0.00311677  0.00432199  0.00175954]
    56 [-0.00349352  0.00484818  0.00179801]
    57 [-0.00387667  0.00538299  0.00182625]
    58 [-0.00426423  0.0059236   0.00184574]
    59 [-0.00465439  0.00646747  0.0018577 ]




.. GENERATED FROM PYTHON SOURCE LINES 67-68

Plot a modal result

.. GENERATED FROM PYTHON SOURCE LINES 68-71

.. code-block:: default

    result.plot_nodal_displacement(0, show_edges=True)





.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_mapdl_3d_beam_002.png
   :alt: mapdl 3d beam
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_mapdl_3d_beam_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 72-75

Animate a modal result
result.animate_nodal_solution(0, show_edges=True, loop=False, displacement_factor=10,
movie_filename='demo.gif')

.. GENERATED FROM PYTHON SOURCE LINES 77-80

Stop mapdl
~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 80-81

.. code-block:: default

    mapdl.exit()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.997 seconds)


.. _sphx_glr_download_examples_gallery_examples_00-mapdl-examples_mapdl_3d_beam.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: mapdl_3d_beam.py <mapdl_3d_beam.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: mapdl_3d_beam.ipynb <mapdl_3d_beam.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
