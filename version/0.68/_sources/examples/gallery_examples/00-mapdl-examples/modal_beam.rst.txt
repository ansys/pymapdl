
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/gallery_examples/00-mapdl-examples/modal_beam.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_examples_00-mapdl-examples_modal_beam.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_00-mapdl-examples_modal_beam.py:


.. _ref_modal_beam:

=================================
MAPDL modal beam analysis example
=================================

This example demonstrates how to perform a simple modal analysis
and animate its results.


Objective
~~~~~~~~~
This example models a simple 3D elastic beam made of BEAM188 elements.
These beams elements are made of a linear elastic material similar to steel,
and have a rectangular section.


Procedure
~~~~~~~~~

* Launch MAPDL instance
* Material properties
* Geometry
* Finite element model
* Boundary conditions
* Solving the model
* Post-processing
* Stop MAPDL

.. GENERATED FROM PYTHON SOURCE LINES 56-60

Launch MAPDL instance
=====================

Launch MAPDL with interactive plotting

.. GENERATED FROM PYTHON SOURCE LINES 60-68

.. code-block:: Python

    from ansys.mapdl.core import launch_mapdl

    nmodes = 10
    # start MAPDL
    mapdl = launch_mapdl()
    print(mapdl)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Product:             Ansys Mechanical Enterprise Academic Student
    MAPDL Version:       24.2
    ansys.mapdl Version: 0.68.6





.. GENERATED FROM PYTHON SOURCE LINES 69-73

Define material
===============

Define material

.. GENERATED FROM PYTHON SOURCE LINES 73-78

.. code-block:: Python

    mapdl.prep7()
    mapdl.mp("EX", 1, 2.1e11)
    mapdl.mp("PRXY", 1, 0.3)
    mapdl.mp("DENS", 1, 7800)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    MATERIAL          1     DENS =   7800.000



.. GENERATED FROM PYTHON SOURCE LINES 79-83

Create geometry
===============

Create keypoints and line

.. GENERATED FROM PYTHON SOURCE LINES 83-88

.. code-block:: Python

    mapdl.k(1)
    mapdl.k(2, 10)
    mapdl.l(1, 2)
    mapdl.lplot()




.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_001.png
   :alt: modal beam
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 89-93

Define finite element model
===========================

Define element type/section type - Rectangular beam section.

.. GENERATED FROM PYTHON SOURCE LINES 93-106

.. code-block:: Python

    mapdl.et(1, "BEAM188")
    mapdl.sectype(1, "BEAM", "RECT")
    mapdl.secoffset("CENT")
    mapdl.secdata(2, 1)

    # Mesh the line
    mapdl.type(1)
    mapdl.esize(1)
    mapdl.lesize("ALL")
    mapdl.lmesh("ALL")
    mapdl.eplot()
    mapdl.finish()




.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_002.png
   :alt: modal beam
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    ***** ROUTINE COMPLETED *****  CP =         0.000



.. GENERATED FROM PYTHON SOURCE LINES 107-111

Specify boundary conditions
===========================

Fully fixed (clamped) end.

.. GENERATED FROM PYTHON SOURCE LINES 111-117

.. code-block:: Python

    mapdl.solution()  # Entering the solution processor.
    mapdl.nsel("S", "LOC", "X", "0")
    mapdl.d("ALL", "ALL")
    mapdl.allsel()
    mapdl.nplot(plot_bc=True, nnum=True)




.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_003.png
   :alt: modal beam
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 118-122

Solve the model
===============

Setting modal analysis

.. GENERATED FROM PYTHON SOURCE LINES 122-127

.. code-block:: Python

    mapdl.antype("MODAL")
    mapdl.modopt("LANB", nmodes, 0, 200)
    mapdl.solve()
    mapdl.finish()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    FINISH SOLUTION PROCESSING


     ***** ROUTINE COMPLETED *****  CP =         0.000



.. GENERATED FROM PYTHON SOURCE LINES 128-132

Postprocess
===========

Enter the post processor (post1)

.. GENERATED FROM PYTHON SOURCE LINES 132-138

.. code-block:: Python

    mapdl.post1()
    output = mapdl.set("LIST")
    print(output)

    result = mapdl.result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    *****  INDEX OF DATA SETS ON RESULTS FILE  *****

         SET   TIME/FREQ    LOAD STEP   SUBSTEP  CUMULATIVE
           1  8.3233851             1         1         1                  
           2  16.274527             1         2         2                  
           3  50.891463             1         3         3                  
           4  60.248510             1         4         4                  
           5  89.208488             1         5         5                  
           6  129.85203             1         6         6                  
           7  138.63765             1         7         7                  
           8  182.23482             1         8         8




.. GENERATED FROM PYTHON SOURCE LINES 139-140

Animate results

.. GENERATED FROM PYTHON SOURCE LINES 140-163

.. code-block:: Python


    mode2plot = 2
    normalizeDisplacement = 1 / result.nodal_displacement(mode2plot - 1)[1].max()

    result.plot_nodal_displacement(
        mode2plot,
        show_displacement=True,
        displacement_factor=normalizeDisplacement,
        n_colors=10,
    )

    result.animate_nodal_displacement(
        mode2plot,
        loop=False,
        add_text=False,
        n_frames=100,
        displacement_factor=normalizeDisplacement,
        show_axes=False,
        background="w",
        movie_filename="animation.gif",
        off_screen=True,
    )




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_004.png
          :alt: modal beam
          :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_004.png
          :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_005.gif
          :alt: modal beam
          :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_modal_beam_005.gif
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Rendering animation:   0%|          | 0/100 [00:00<?, ?it/s]    Rendering animation:   1%|          | 1/100 [00:00<00:15,  6.37it/s]    Rendering animation:   4%|▍         | 4/100 [00:00<00:06, 15.20it/s]    Rendering animation:   7%|▋         | 7/100 [00:00<00:05, 18.43it/s]    Rendering animation:   9%|▉         | 9/100 [00:00<00:04, 18.77it/s]    Rendering animation:  12%|█▏        | 12/100 [00:00<00:04, 19.80it/s]    Rendering animation:  15%|█▌        | 15/100 [00:00<00:04, 20.81it/s]    Rendering animation:  18%|█▊        | 18/100 [00:00<00:03, 21.34it/s]    Rendering animation:  21%|██        | 21/100 [00:01<00:03, 21.53it/s]    Rendering animation:  24%|██▍       | 24/100 [00:01<00:03, 21.31it/s]    Rendering animation:  27%|██▋       | 27/100 [00:01<00:03, 21.62it/s]    Rendering animation:  30%|███       | 30/100 [00:01<00:03, 21.81it/s]    Rendering animation:  33%|███▎      | 33/100 [00:01<00:03, 21.40it/s]    Rendering animation:  36%|███▌      | 36/100 [00:01<00:03, 21.13it/s]    Rendering animation:  39%|███▉      | 39/100 [00:01<00:02, 21.45it/s]    Rendering animation:  42%|████▏     | 42/100 [00:02<00:02, 20.98it/s]    Rendering animation:  45%|████▌     | 45/100 [00:02<00:02, 21.43it/s]    Rendering animation:  48%|████▊     | 48/100 [00:02<00:02, 21.28it/s]    Rendering animation:  51%|█████     | 51/100 [00:02<00:02, 21.71it/s]    Rendering animation:  54%|█████▍    | 54/100 [00:02<00:02, 21.71it/s]    Rendering animation:  57%|█████▋    | 57/100 [00:02<00:01, 21.80it/s]    Rendering animation:  60%|██████    | 60/100 [00:02<00:01, 21.29it/s]    Rendering animation:  63%|██████▎   | 63/100 [00:03<00:01, 21.48it/s]    Rendering animation:  66%|██████▌   | 66/100 [00:03<00:01, 21.76it/s]    Rendering animation:  69%|██████▉   | 69/100 [00:03<00:01, 21.83it/s]    Rendering animation:  72%|███████▏  | 72/100 [00:03<00:01, 21.33it/s]    Rendering animation:  75%|███████▌  | 75/100 [00:03<00:01, 21.60it/s]    Rendering animation:  78%|███████▊  | 78/100 [00:03<00:01, 21.51it/s]    Rendering animation:  81%|████████  | 81/100 [00:03<00:00, 21.62it/s]    Rendering animation:  84%|████████▍ | 84/100 [00:04<00:00, 21.25it/s]    Rendering animation:  87%|████████▋ | 87/100 [00:04<00:00, 21.46it/s]    Rendering animation:  90%|█████████ | 90/100 [00:04<00:00, 21.70it/s]    Rendering animation:  93%|█████████▎| 93/100 [00:04<00:00, 21.83it/s]    Rendering animation:  96%|█████████▌| 96/100 [00:04<00:00, 21.39it/s]    Rendering animation:  99%|█████████▉| 99/100 [00:04<00:00, 21.31it/s]    Rendering animation: 100%|██████████| 100/100 [00:11<00:00,  8.50it/s]

    [(16.153550716504107, 11.153550716504107, 11.153550716504107),
     (5.0, 0.0, 0.0),
     (0.0, 0.0, 1.0)]



.. GENERATED FROM PYTHON SOURCE LINES 164-167

Stop MAPDL
==========


.. GENERATED FROM PYTHON SOURCE LINES 167-169

.. code-block:: Python

    mapdl.finish()
    mapdl.exit()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 13.585 seconds)


.. _sphx_glr_download_examples_gallery_examples_00-mapdl-examples_modal_beam.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: modal_beam.ipynb <modal_beam.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: modal_beam.py <modal_beam.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: modal_beam.zip <modal_beam.zip>`
