
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/gallery_examples/00-mapdl-examples/pyvista_mesh.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_examples_00-mapdl-examples_pyvista_mesh.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_00-mapdl-examples_pyvista_mesh.py:


.. _ref_pyvista_mesh:

PyVista Mesh Integration
------------------------

Run a modal analysis on a mesh generated from pyvista within MAPDL.

.. GENERATED FROM PYTHON SOURCE LINES 10-27

.. code-block:: default

    # sphinx_gallery_thumbnail_number = 2

    import os
    import tempfile

    from ansys.mapdl.reader import save_as_archive
    import pyvista as pv

    from ansys.mapdl.core import launch_mapdl

    # launch MAPDL as a service
    mapdl = launch_mapdl(loglevel="ERROR")

    # Create a simple plane mesh centered at (0, 0, 0) on the XY plane
    mesh = pv.Plane(i_resolution=100, j_resolution=100)
    mesh.plot(color="w", show_edges=True)




.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_pyvista_mesh_001.png
   :alt: pyvista mesh
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_pyvista_mesh_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 28-29

Write the mesh to a temporary file

.. GENERATED FROM PYTHON SOURCE LINES 29-61

.. code-block:: default

    archive_filename = os.path.join(tempfile.gettempdir(), "tmp.cdb")
    save_as_archive(archive_filename, mesh)

    # Read in the archive file
    response = mapdl.cdread("db", archive_filename)
    mapdl.prep7()
    print(mapdl.shpp("SUMM"))

    # specify shell thickness
    mapdl.sectype(1, "shell")
    mapdl.secdata(0.01)
    mapdl.emodif("ALL", "SECNUM", 1)

    # specify material properties
    # using aprox values for AISI 5000 Series Steel
    # http://www.matweb.com/search/datasheet.aspx?matguid=89d4b891eece40fbbe6b71f028b64e9e
    mapdl.units("SI")  # not necessary, but helpful for book keeping
    mapdl.mp("EX", 1, 200e9)  # Elastic moduli in Pa (kg/(m*s**2))
    mapdl.mp("DENS", 1, 7800)  # Density in kg/m3
    mapdl.mp("NUXY", 1, 0.3)  # Poissons Ratio
    mapdl.emodif("ALL", "MAT", 1)

    # Run an unconstrained modal analysis
    # for the first 20 modes above 1 Hz
    mapdl.modal_analysis(nmode=20, freqb=1)

    # you could have also run:
    # mapdl.run('/SOLU')
    # mapdl.antype('MODAL')  # default NEW
    # mapdl.modopt('LANB', 20, 1)
    # mapdl.solve()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    SUMMARIZE SHAPE TESTING FOR ALL SELECTED ELEMENTS

     ------------------------------------------------------------------------------
                <<<<<<          SHAPE TESTING SUMMARY           >>>>>>
                <<<<<<        FOR ALL SELECTED ELEMENTS         >>>>>>
     ------------------------------------------------------------------------------
                        --------------------------------------
                        |  Element count     10000 SHELL181  |
                        --------------------------------------

      Test                Number tested  Warning count  Error count    Warn+Err %
      ----                -------------  -------------  -----------    ----------
      Aspect Ratio              10000              0             0         0.00 %
      Parallel Deviation        10000              0             0         0.00 %
      Maximum Angle             10000              0             0         0.00 %
      Jacobian Ratio            10000              0             0         0.00 %
      Warping Factor            10000              0             0         0.00 %

      Any                       10000              0             0         0.00 %
     ------------------------------------------------------------------------------

    *****  MAPDL SOLVE    COMMAND  *****

     *** NOTE ***                            CP =       0.000   TIME= 00:00:00
     There is no title defined for this analysis.                            

     *** SELECTION OF ELEMENT TECHNOLOGIES FOR APPLICABLE ELEMENTS ***
                    ---GIVE SUGGESTIONS ONLY---

     ELEMENT TYPE         4 IS SHELL181. IT IS ASSOCIATED WITH ELASTOPLASTIC 
     MATERIALS ONLY. KEYOPT(8)=2 IS SUGGESTED AND KEYOPT(3)=2 IS SUGGESTED FOR
     HIGHER ACCURACY OF MEMBRANE STRESSES; OTHERWISE, KEYOPT(3)=0 IS SUGGESTED.


       *****MAPDL VERIFICATION RUN ONLY*****
         DO NOT USE RESULTS FOR PRODUCTION

                           S O L U T I O N   O P T I O N S

       PROBLEM DIMENSIONALITY. . . . . . . . . . . . .3-D                  
       DEGREES OF FREEDOM. . . . . . UX   UY   UZ   ROTX ROTY ROTZ
       ANALYSIS TYPE . . . . . . . . . . . . . . . . .MODAL                
          EXTRACTION METHOD. . . . . . . . . . . . . .BLOCK LANCZOS
       NUMBER OF MODES TO EXTRACT. . . . . . . . . . .    20
       SHIFT POINT . . . . . . . . . . . . . . . . . .  1.0000    
       GLOBALLY ASSEMBLED MATRIX . . . . . . . . . . .SYMMETRIC  

     *** WARNING ***                         CP =       0.000   TIME= 00:00:00
     No constraints have been defined using the D command.                   

     *** NOTE ***                            CP =       0.000   TIME= 00:00:00
     The step data was checked and warning messages were found.              
      Please review output or errors file ( ) for these warning messages.    

     *** NOTE ***                            CP =       0.000   TIME= 00:00:00
     The conditions for direct assembly have been met.  No .emat or .erot    
     files will be produced.                                                 

                          L O A D   S T E P   O P T I O N S

       LOAD STEP NUMBER. . . . . . . . . . . . . . . .     1
       THERMAL STRAINS INCLUDED IN THE LOAD VECTOR . .   YES



                             ***********  PRECISE MASS SUMMARY  ***********

       TOTAL RIGID BODY MASS MATRIX ABOUT ORIGIN
                   Translational mass               |   Coupled translational/rotational mass
             78.000        0.0000      -0.48842E-30 |   -0.17755E-33  -0.17959E-31   0.20817E-16
             0.0000        78.000        0.0000     |    0.13915E-31    0.0000       0.70300E-15
           -0.48238E-30    0.0000        78.000     |    0.53776E-15  -0.68391E-15  -0.54477E-33
         ------------------------------------------ | ------------------------------------------
                                                    |         Rotational mass (inertia)
                                                    |     6.5006       0.22335E-16   0.72143E-15
                                                    |   -0.27105E-16    6.5006       0.61389E-32
                                                    |    0.72143E-15  -0.12037E-32    12.999    

       TOTAL MASS =  78.000    
         The mass principal axes coincide with the global Cartesian axes

       CENTER OF MASS (X,Y,Z)=   0.90128E-17  -0.26688E-18  -0.23025E-33

       TOTAL INERTIA ABOUT CENTER OF MASS
             6.5006       0.22335E-16   0.72143E-15
            0.22335E-16    6.5006       0.61389E-32
            0.72143E-15   0.61389E-32    12.999    
         The inertia principal axes coincide with the global Cartesian axes


      *** MASS SUMMARY BY ELEMENT TYPE ***

      TYPE      MASS
         4   78.0000    

     Range of element maximum matrix coefficients in global coordinates
     Maximum = 749504998 at element 0.                                       
     Minimum = 749503915 at element 0.                                       

       *** ELEMENT MATRIX FORMULATION TIMES
         TYPE    NUMBER   ENAME      TOTAL CP  AVE CP

            4     10000  SHELL181      0.000   0.000000
     Time at end of element matrix formulation CP = 0.                       

      BLOCK LANCZOS CALCULATION OF UP TO    20 EIGENVECTORS.
      NUMBER OF EQUATIONS              =        61206
      MAXIMUM WAVEFRONT                =            0
      MAXIMUM MODES STORED             =           20
      MINIMUM EIGENVALUE               =  0.10000E+01
      MAXIMUM EIGENVALUE               =  0.10000E+31

      Memory available (MB) =    0.0    ,  Memory required (MB) =    0.0    

       *****MAPDL VERIFICATION RUN ONLY*****
         DO NOT USE RESULTS FOR PRODUCTION

     *** FREQUENCIES FROM BLOCK LANCZOS ITERATION ***

      MODE    FREQUENCY (HERTZ)      


       FREQUENCY RANGE REQUESTED=   20 MODES ABOVE   1.00000     HERTZ

        1     32.74664192985    
        2     47.77804288732    
        3     59.17108298366    
        4     84.60790505169    
        5     84.60790505199    
        6     148.8927748650    
        7     148.8927748653    
        8     154.6519861747    
        9     168.3840411463    
       10     187.7790667345    
       11     255.9751634916    
       12     255.9751634920    
       13     285.2444050784    
       14     298.2943388360    
       15     319.8023401634    
       16     319.8023401639    
       17     370.6023621796    
       18     391.8457651356    
       19     409.1039880846    
       20     482.6516135508



.. GENERATED FROM PYTHON SOURCE LINES 62-63

Load the result file within ``pyansys`` and plot the 8th mode.

.. GENERATED FROM PYTHON SOURCE LINES 63-68

.. code-block:: default

    result = mapdl.result
    print(result)

    result.plot_nodal_displacement(7, show_displacement=True, displacement_factor=0.4)




.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_pyvista_mesh_002.png
   :alt: pyvista mesh
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_pyvista_mesh_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    PyMAPDL Result
    Units       : User Defined
    Version     : 22.2
    Cyclic      : False
    Result Sets : 20
    Nodes       : 10201
    Elements    : 10000


    Available Results:
    NSL : Nodal displacements





.. GENERATED FROM PYTHON SOURCE LINES 69-70

plot the 1st mode using contours

.. GENERATED FROM PYTHON SOURCE LINES 70-74

.. code-block:: default

    result.plot_nodal_displacement(
        0, show_displacement=True, displacement_factor=0.4, n_colors=10
    )




.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_pyvista_mesh_003.png
   :alt: pyvista mesh
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_pyvista_mesh_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 75-79

Animate a high frequency mode

Get a smoother plot by disabling movie_filename and increasing ``n_frames``.
Enable a continuous plot looping with ```loop=True```.

.. GENERATED FROM PYTHON SOURCE LINES 79-91

.. code-block:: default


    result.animate_nodal_displacement(
        18,
        loop=False,
        add_text=False,
        n_frames=30,
        displacement_factor=0.4,
        show_axes=False,
        background="w",
        movie_filename="plane_vib.gif",
    )




.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_pyvista_mesh_004.png
   :alt: pyvista mesh
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_pyvista_mesh_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    [(1.5773502691896262, 1.5773502691896262, 1.5773502691896262),
     (0.0, 0.0, 0.0),
     (0.0, 0.0, 1.0)]



.. GENERATED FROM PYTHON SOURCE LINES 92-95

Stop mapdl
~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 95-96

.. code-block:: default

    mapdl.exit()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  8.568 seconds)


.. _sphx_glr_download_examples_gallery_examples_00-mapdl-examples_pyvista_mesh.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: pyvista_mesh.py <pyvista_mesh.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: pyvista_mesh.ipynb <pyvista_mesh.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
