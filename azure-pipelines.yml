# azure pipelines build pyansys

variables:
  package_name: pyansys

trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'


jobs:
- job: ManyLinux
  strategy:
    matrix:
      # Python27:
      #   python.version: '2.7'
      #   python.architecture: 'x64'
      # Python35:
      #   python.version: '3.5'
      #   python.architecture: 'x64'
      # Python36:
      #   python.version: '3.6'
      #   python.architecture: 'x64'
      Python37:
        python.version: '3.7'
        python.architecture: 'x64'
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
    - checkout: none
    - script: |
        git clone --depth 1 https://github.com/akaszynski/pyansys -b '$(Build.SourceBranchName)' .
        echo "PWD:" $(pwd)
        echo "Source dir follows"
        echo '$(Build.SourcesDirectory)'
        ls '$(Build.SourcesDirectory)'
      displayName: Get Source
    - script: |
        docker pull quay.io/pypa/manylinux2010_x86_64
      displayName: Pull Docker Image
    - script: |
        set -ex
        # docker run -e package_name=$(package_name) --rm -v `pwd`:/io quay.io/pypa/manylinux2010_x86_64 "/io/.ci/build_wheels.sh $(python.version)"
        docker run -e package_name=$(package_name) --rm -v `pwd`:/io quay.io/pypa/manylinux2010_x86_64 ls /io -la
	docker run -e package_name=$(package_name) --rm -v `pwd`:/io quay.io/pypa/manylinux2010_x86_64 ls /io/.ci
	docker run -e package_name=$(package_name) --rm -v `pwd`:/io quay.io/pypa/manylinux2010_x86_64 /io/.ci/build_wheels.sh $(python.version)
        cd ..
      displayName: Build wheels
    - template: .ci/azure-publish-dist.yml


# - job: BuildDocumentation
#   pool:
#     vmImage: 'ubuntu-latest'
#   dependsOn:
#   - ManyLinux
#   steps:
#   - template: .ci/checkout.yml
#   - template: .ci/build_documentation.yml


# - job: Windows
#   strategy:
#     matrix:
#       Python35:
#         python.version: '3.5'
#         python.architecture: 'x64'
#       Python36:
#         python.version: '3.6'
#         python.architecture: 'x64'
#       Python37:
#         python.version: '3.7'
#         python.architecture: 'x64'
#   pool:
#     vmImage: 'vs2017-win2016'
#   steps:
#     - checkout: none
#     - powershell: |
#         git clone --depth 1 https://github.com/akaszynski/pyansys -b '$(Build.SourceBranchName)' .
#     - template: .ci/azure-setup.yml
#     - template: .ci/azure-steps.yml
#     - template: .ci/azure-publish-dist.yml

# - job: macOS
#   variables:
#     python.architecture: 'x64'
#   strategy:
#     matrix:
#       Python36:
#         python.version: '3.6'
#       Python37:
#         python.version: '3.7'
#   pool:
#     vmImage: 'macOS-10.14'
#   steps:
#     - checkout: none
#     - script: |
#         git clone --depth 1 https://github.com/akaszynski/pyansys -b '$(Build.SourceBranchName)' .
#     - template: .ci/azure-setup.yml
#     - template: .ci/azure-steps.yml
#     - template: .ci/azure-publish-dist.yml

# - job: GitHubRelease
#   pool:
#     vmImage: 'ubuntu-latest'
#   dependsOn:
#   - BuildDocumentation
#   - Linux
#   - Windows
#   - macOS
#   steps:
#   - checkout: none
#   - task: DownloadPipelineArtifact@2
#     inputs:
#       buildType: 'current'
#       targetPath: '$(Pipeline.Workspace)/artifacts'
#   - script: |
#       ARTIFACTS='$(Pipeline.Workspace)/artifacts'
#       RELEASE_FILES='$(Pipeline.Workspace)/release_files'
#       mkdir -p $RELEASE_FILES
#       find $ARTIFACTS -name "*.*" -execdir mv {} $RELEASE_FILES \;
#       echo 'listing release files'
#       ls $RELEASE_FILES -lh
#     displayName: 'Flatten artifacts'
#   - task: GitHubRelease@0
#     inputs:
#       gitHubConnection: 'github_auth'
#       repositoryName: 'pyansys/$(package_name)'
#       action: 'create'
#       target: '$(Build.SourceVersion)'
#       tagSource: 'auto'
#       assets: '$(Pipeline.Workspace)/release_files'
#       isDraft: true
#       addChangeLog: true
#     displayName: Create GitHub Release
#   condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')