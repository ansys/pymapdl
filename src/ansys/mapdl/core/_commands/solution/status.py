# Copyright (C) 2016 - 2025 ANSYS, Inc. and/or its affiliates.
# SPDX-License-Identifier: MIT
#
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


class Status:

    def atype(self, **kwargs):
        r"""Specifies "Analysis types" as the subsequent status topic.

        Mechanical APDL Command: `ATYPE <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_ATYPE.html>`_

        Notes
        -----

        .. _ATYPE_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "ATYPE"
        return self.run(command, **kwargs)

    def bioopt(self, **kwargs):
        r"""Specifies "Biot-Savart options" as the subsequent status topic.

        Mechanical APDL Command: `BIOOPT <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_BIOOPT.html>`_

        Notes
        -----

        .. _BIOOPT_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "BIOOPT"
        return self.run(command, **kwargs)

    def deact(self, **kwargs):
        r"""Specifies "Element birth and death" as the subsequent status topic.

        Mechanical APDL Command: `DEACT <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_DEACT.html>`_

        Notes
        -----

        .. _DEACT_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "DEACT"
        return self.run(command, **kwargs)

    def dynopt(self, **kwargs):
        r"""Specifies "Dynamic analysis options" as the subsequent status topic.

        Mechanical APDL Command: `DYNOPT <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_DYNOPT.html>`_

        Notes
        -----

        .. _DYNOPT_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "DYNOPT"
        return self.run(command, **kwargs)

    def genopt(self, **kwargs):
        r"""Specifies "General options" as the subsequent status topic.

        Mechanical APDL Command: `GENOPT <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_GENOPT.html>`_

        Notes
        -----

        .. _GENOPT_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.


        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "GENOPT"
        return self.run(command, **kwargs)

    def inrtia(self, **kwargs):
        r"""Specifies Inertial loads as the subsequent status topic.

        Mechanical APDL Command: `INRTIA <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_INRTIA.html>`_

        Notes
        -----

        .. _INRTIA_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "INRTIA"
        return self.run(command, **kwargs)

    def lsoper(self, **kwargs):
        r"""Specifies "Load step operations" as the subsequent status topic.

        Mechanical APDL Command: `LSOPER <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_LSOPER.html>`_

        Notes
        -----

        .. _LSOPER_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "LSOPER"
        return self.run(command, **kwargs)

    def master(self, **kwargs):
        r"""Specifies "Master DOF" as the subsequent status topic.

        Mechanical APDL Command: `MASTER <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_MASTER.html>`_

        Notes
        -----

        .. _MASTER_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "MASTER"
        return self.run(command, **kwargs)

    def nlopt(self, **kwargs):
        r"""Specifies "Nonlinear analysis options" as the subsequent status topic.

        Mechanical APDL Command: `NLOPT <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_NLOPT.html>`_

        Notes
        -----

        .. _NLOPT_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "NLOPT"
        return self.run(command, **kwargs)

    def outopt(self, **kwargs):
        r"""Specifies "Output options" as the subsequent status topic.

        Mechanical APDL Command: `OUTOPT <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_OUTOPT.html>`_

        Notes
        -----

        .. _OUTOPT_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "OUTOPT"
        return self.run(command, **kwargs)

    def smbody(self, **kwargs):
        r"""Specifies "Body loads on the solid model" as the subsequent status topic.

        Mechanical APDL Command: `SMBODY <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_SMBODY.html>`_

        Notes
        -----

        .. _SMBODY_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "SMBODY"
        return self.run(command, **kwargs)

    def smcons(self, **kwargs):
        r"""Specifies "Constraints on the solid model" as the subsequent status topic.

        Mechanical APDL Command: `SMCONS <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_SMCONS.html>`_

        Notes
        -----

        .. _SMCONS_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "SMCONS"
        return self.run(command, **kwargs)

    def smfor(self, **kwargs):
        r"""Specifies "Forces on the solid model" as the subsequent status topic.

        Mechanical APDL Command: `SMFOR <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_SMFOR.html>`_

        Notes
        -----

        .. _SMFOR_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "SMFOR"
        return self.run(command, **kwargs)

    def smsurf(self, **kwargs):
        r"""Specifies "Surface loads on the solid model" as the subsequent status topic.

        Mechanical APDL Command: `SMSURF <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_SMSURF.html>`_

        Notes
        -----

        .. _SMSURF_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "SMSURF"
        return self.run(command, **kwargs)

    def soluopt(self, **kwargs):
        r"""Specifies "Solution options" as the subsequent status topic.

        Mechanical APDL Command: `SOLUOPT <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_SOLUOPT.html>`_

        Notes
        -----

        .. _SOLUOPT_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "SOLUOPT"
        return self.run(command, **kwargs)

    def sptopt(self, **kwargs):
        r"""Specifies "Spectrum analysis options" as the subsequent status topic.

        Mechanical APDL Command: `SPTOPT <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_SPTOPT.html>`_

        Notes
        -----

        .. _SPTOPT_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "SPTOPT"
        return self.run(command, **kwargs)
