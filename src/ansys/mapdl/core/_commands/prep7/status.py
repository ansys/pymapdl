# Copyright (C) 2016 - 2025 ANSYS, Inc. and/or its affiliates.
# SPDX-License-Identifier: MIT
#
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


class Status:

    def keypts(self, **kwargs):
        r"""Specifies "Keypoints" as the subsequent status topic.

        Mechanical APDL Command: `KEYPTS <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_KEYPTS.html>`_

        Notes
        -----

        .. _KEYPTS_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "KEYPTS"
        return self.run(command, **kwargs)

    def etype(self, **kwargs):
        r"""Specifies "Element types" as the subsequent status topic.

        Mechanical APDL Command: `ETYPE <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_ETYPE.html>`_

        Notes
        -----

        .. _ETYPE_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "ETYPE"
        return self.run(command, **kwargs)

    def elem(self, **kwargs):
        r"""Specifies "Elements" as the subsequent status topic.

        Mechanical APDL Command: `ELEM <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_ELEM.html>`_

        Notes
        -----

        .. _ELEM_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "ELEM"
        return self.run(command, **kwargs)

    def pipe(self, **kwargs):
        r"""Specifies "Pipe modeling" as the subsequent status topic.

        Mechanical APDL Command: `PIPE <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_PIPE.html>`_

        Notes
        -----

        .. _PIPE_notes:

        This is a status topic command. If status is requested for some items, it appears  in the log
        file ( :file:`Jobname.LOG` ). This command should be followed immediately by a :ref:`stat` command,
        which reports the status for the specified topic.

        .. warning::

            This command is archived in the latest version of the software.

        """
        command = "PIPE"
        return self.run(command, **kwargs)

    def prim(self, **kwargs):
        r"""Specifies "Solid model primitives" as the subsequent status topic.

        Mechanical APDL Command: `PRIM <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_PRIM.html>`_

        Notes
        -----

        .. _PRIM_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "PRIM"
        return self.run(command, **kwargs)

    def line(self, **kwargs):
        r"""Specifies "Lines" as the subsequent status topic.

        Mechanical APDL Command: `LINE <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_LINE.html>`_

        Notes
        -----

        .. _LINE_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "LINE"
        return self.run(command, **kwargs)

    def mater(self, **kwargs):
        r"""Specifies "Material properties" as the subsequent status topic.

        Mechanical APDL Command: `MATER <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_MATER.html>`_

        Notes
        -----

        .. _MATER_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "MATER"
        return self.run(command, **kwargs)

    def meshing(self, **kwargs):
        r"""Specifies "Meshing" as the subsequent status topic.

        Mechanical APDL Command: `MESHING <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_MESHING.html>`_

        Notes
        -----

        .. _MESHING_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "MESHING"
        return self.run(command, **kwargs)

    def geometry(self, **kwargs):
        r"""Specifies "Geometry" as the subsequent status topic.

        Mechanical APDL Command: `GEOMETRY <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_GEOMETRY.html>`_

        Notes
        -----

        .. _GEOMETRY_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "GEOMETRY"
        return self.run(command, **kwargs)

    def tble(self, **kwargs):
        r"""Specifies "Data table properties" as the subsequent status topic.

        Mechanical APDL Command: `TBLE <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_TBLE.html>`_

        Notes
        -----

        .. _TBLE_notes:

        This is a status ( :ref:`stat` )  topic command. Status topic commands are generated by the
        GUI and will appear in the log file ( :file:`Jobname`.LOG) if status is requested for some items
        under Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat`
        command, which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "TBLE"
        return self.run(command, **kwargs)

    def volumes(self, **kwargs):
        r"""Specifies "Volumes" as the subsequent status topic.

        Mechanical APDL Command: `VOLUMES <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_VOLUMES.html>`_

        Notes
        -----

        .. _VOLUMES_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items by choosing
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "VOLUMES"
        return self.run(command, **kwargs)

    def nodes(self, **kwargs):
        r"""Specifies "Nodes" as the subsequent status topic.

        Mechanical APDL Command: `NODES <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_NODES.html>`_

        Notes
        -----

        .. _NODES_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "NODES"
        return self.run(command, **kwargs)

    def rcon(self, **kwargs):
        r"""Specifies "Real constants" as the subsequent status topic.

        Mechanical APDL Command: `RCON <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_RCON.html>`_

        Notes
        -----

        .. _RCON_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "RCON"
        return self.run(command, **kwargs)

    def ceqn(self, **kwargs):
        r"""Specifies "Constraint equations" as the subsequent status topic.

        Mechanical APDL Command: `CEQN <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_CEQN.html>`_

        Notes
        -----

        .. _CEQN_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "CEQN"
        return self.run(command, **kwargs)

    def couple(self, **kwargs):
        r"""Specifies "Node coupling" as the subsequent status topic.

        Mechanical APDL Command: `COUPLE <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_COUPLE.html>`_

        Notes
        -----

        .. _COUPLE_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "COUPLE"
        return self.run(command, **kwargs)

    def areas(self, **kwargs):
        r"""Specifies "Areas" as the subsequent status topic.

        Mechanical APDL Command: `AREAS <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_AREAS.html>`_

        Notes
        -----

        .. _AREAS_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "AREAS"
        return self.run(command, **kwargs)

    def bool(self, **kwargs):
        r"""Specifies "Booleans" as the subsequent status topic.

        Mechanical APDL Command: `BOOL <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_BOOL.html>`_

        Notes
        -----

        .. _BOOL_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "BOOL"
        return self.run(command, **kwargs)

    def selm(self, **kwargs):
        r"""Specifies "Superelements" as the subsequent status topic.

        Mechanical APDL Command: `SELM <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_SELM.html>`_

        Notes
        -----

        .. _SELM_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "SELM"
        return self.run(command, **kwargs)

    def fecons(self, **kwargs):
        r"""Specifies "Constraints on nodes" as the subsequent status topic.

        Mechanical APDL Command: `FECONS <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_FECONS.html>`_

        Notes
        -----

        .. _FECONS_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "FECONS"
        return self.run(command, **kwargs)

    def fefor(self, **kwargs):
        r"""Specifies "Forces on nodes" as the subsequent status topic.

        Mechanical APDL Command: `FEFOR <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_FEFOR.html>`_

        Notes
        -----

        .. _FEFOR_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "FEFOR"
        return self.run(command, **kwargs)

    def febody(self, **kwargs):
        r"""Specifies "Body loads on elements" as the subsequent status topic.

        Mechanical APDL Command: `FEBODY <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_FEBODY.html>`_

        Notes
        -----

        .. _FEBODY_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "FEBODY"
        return self.run(command, **kwargs)

    def fesurf(self, **kwargs):
        r"""Specifies "Surface loads on elements" as the subsequent status topic.

        Mechanical APDL Command: `FESURF <https://ansyshelp.ansys.com/Views/Secured/corp/v232/en//ans_cmd/Hlp_C_FESURF.html>`_

        Notes
        -----

        .. _FESURF_notes:

        This is a status ( :ref:`stat` ) topic command. Status topic commands are generated by the GUI and
        will appear in the log file ( :file:`Jobname.LOG` ) if status is requested for some items under
        Utility Menu> List> Status. This command will be immediately followed by a :ref:`stat` command,
        which will report the status for the specified topic.

        If entered directly into the program, the :ref:`stat` command should immediately follow this
        command.
        """
        command = "FESURF"
        return self.run(command, **kwargs)
