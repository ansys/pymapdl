# .github/workflows/recreate-pr.yml
name: Fork PR Handler

on:
  issue_comment:
    types: [created]

  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number'
        required: true
        type: number

jobs:
  migrate:
    if: |
       (
        github.event.issue.pull_request != null &&
        contains(github.event.comment.body, '@pyansys-ci-bot migrate') &&
        github.event.comment.user.login == 'germa89' 
        ) || ( github.event_name == 'workflow_dispatch' )
    runs-on: ubuntu-latest
    steps:
      - name: React to comment
        if : ${{ github.event_name == 'issue_comment' }}
        uses: dkershner6/reaction-action@v2
        with:
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
          commentId: ${{ github.event.comment.id }}
          reaction: "rocket"

      - uses: actions/checkout@v3

      - name: "Configuration"
        id: config
        run: |
          if [[ ${{ github.event_name }} == "workflow_dispatch" ]] ; then
            echo "On workflow dispatch"
            echo "issue_number=${{ inputs.issue_number }}" >> $GITHUB_OUTPUT
          else
            echo "On ${{ github.event_name }}"
            echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          fi;

          # echo "Setting up git"
          git config --global user.name "${{ secrets.PYANSYS_CI_BOT_USERNAME }}"
          git config --global user.email "${{ secrets.PYANSYS_CI_BOT_EMAIL}}"

      - name: Check out the branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: | 
          gh pr checkout ${{ steps.config.outputs.issue_number }}
          echo $(git status)

      - name: Clone PR branch from fork
        id: logic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REMOTE_NAME="dest"
          NEW_BRANCH=migrated/pr-${{ steps.config.outputs.issue_number }}

          title=""
          body=""

          echo "Adding new remote"
          git remote add $REMOTE_NAME https://x-access-token:${{ secrets.PYANSYS_CI_BOT_TOKEN }}@github.com/${{ github.repository }}.git

          if git ls-remote --exit-code --heads $REMOTE_NAME refs/heads/$NEW_BRANCH; then
            echo "Branch '$NEW_BRANCH' already exists on remote '$REMOTE_NAME'."

            body="The branch '$NEW_BRANCH' already exists on the remote. "

          else
            echo "Branch '$NEW_BRANCH' does not exist. Safe to push."

            body="The branch '$NEW_BRANCH' have been created on the remote. "

            git push $REMOTE_NAME HEAD:refs/heads/$NEW_BRANCH
          fi

          PR_NUMBER=$(gh pr list --head $NEW_BRANCH --state open --json number --jq '.[0].number')
          if [[ -n "$PR_NUMBER" ]]; then
            echo "Open PR exists for branch '$NEW_BRANCH': PR #$PR_NUMBER"

            title="PR already exists!"
            body="$body There is already a pull request #$PR_NUMBER on that branch on the remote." # Use `sync` command to sync with that PR.

          else
            echo "No open PR exists for branch '$NEW_BRANCH'. Creating PR..."
            NEW_PR=$(gh pr create --head $NEW_BRANCH --reviewer ${{ github.event.comment.user.login }} --title "chore: migrated PR ${{ steps.config.outputs.issue_number }}" --body "This PR was migrated from a fork to allow secrets to run in workflows. Check the [original PR](https://github.com/${{ github.repository }}/pull/${{ steps.config.outputs.issue_number }}) for more details. Closes [${{ steps.config.outputs.issue_number }}](https://github.com/${{ github.repository }}/pull/${{ steps.config.outputs.issue_number }})" | grep -o 'github\.com/.*/pull/[0-9]*' | sed -E 's#.*/pull/##')
            echo "PR created: $NEW_PR"

            title="New PR opened!"
            body="$body The PR [#$NEW_PR](https://github.com/${{ github.repository }}/pull/${{ env.NEW_PR }}) has been opened."
          fi

          echo "title=$title" >> $GITHUB_OUTPUT
          echo "body=$body" >> $GITHUB_OUTPUT

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ steps.config.outputs.issue_number }}
          body: |
            **${{ steps.logic.outputs.title }}**

            ${{ steps.logic.outputs.body }}

          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}