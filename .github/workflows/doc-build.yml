# Build documentation
name: Documentation Build

on:
  pull_request:
  workflow_dispatch:
  push:
    tags:
      - "*"
    branches:
      - main


jobs:
  docs_build:
    runs-on: ubuntu-20.04

    env:
      DISPLAY: ':99.0'
      MAPDL_IMAGE: 'docker.pkg.github.com/pyansys/pymapdl/mapdl:v21.2.1'
      PYMAPDL_PORT: 32771  # default won't work on azure
      PYMAPDL_START_INSTANCE: FALSE
      PYANSYS_OFF_SCREEN: True

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install, start, and test the virtual framebuffer
        run: |
          .ci/setup_headless_display.sh
          pip install -r .ci/requirements_test_xvfb.txt
          python .ci/display_test.py

      - name: Install ansys-mapdl-core
        run: |
          pip install -r requirements_build.txt
          python setup.py bdist_wheel
          pip install dist/ansys*.whl
          python -c "from ansys.mapdl import core as pymapdl; print(pymapdl.Report())"

      - name: Pull, launch, and validate MAPDL service
        run: |
          echo $GH_PAT | docker login -u $GH_USERNAME --password-stdin docker.pkg.github.com
          docker pull $MAPDL_IMAGE
          docker run -e ANSYSLMD_LICENSE_FILE=1055@$LICENSE_SERVER --restart always --name mapdl -p $PYMAPDL_PORT:50052 $MAPDL_IMAGE -smp > log.txt &
          grep -q 'Server listening on' <(timeout 60 tail -f log.txt)
          python -c "from ansys.mapdl.core import launch_mapdl; print(launch_mapdl())"
        env:
          LICENSE_SERVER: ${{ secrets.LICENSE_SERVER }}
          GH_USERNAME: ${{ secrets.GH_USERNAME }}
          GH_PAT: ${{ secrets.REPO_DOWNLOAD_PAT }}

      - name: Install OS packages
        run: |
          sudo apt update
          sudo apt install zip pandoc -qy
  
      - name: Build Documentation
        run: |
          pip install -r requirements_docs.txt
          make -C doc html SPHINXOPTS="-j auto -w build_errors.txt -N"

      # Verify that sphinx generates no warnings
      - name: Check for warnings
        run: python doc/print_errors.py

      - name: Zip documentation
        run: |
          cd doc/build/html
          zip -r PyMAPDL_documentation.zip *

      - name: Upload Documentation
        uses: actions/upload-artifact@v2
        with:
          name: Documentation
          path: doc/build/html/PyMAPDL_documentation.zip
          retention-days: 7

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@3.7.1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: doc/build/html
          CLEAN: true